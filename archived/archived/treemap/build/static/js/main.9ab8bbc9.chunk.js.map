{"version":3,"sources":["Treemaps.tsx","SampleData.tsx","Chart.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Treemaps","className","width","this","props","height","data","dataKey","type","ratio","stroke","fill","animationBegin","animationDuration","animationEasing","PureComponent","SampleData","name","children","size","Component","React","Chart","receiveEvent","state","invalidDataSet","event","params","properties","get","dataSet","isValid","cols","columns","length","validateDataset","datakey","animationbegin","animationduration","animationeasing","newdata","forEach","d","push","group","reduce","r","a","key","hasOwnProperty","setState","window","addEventListener","removeEventListener","style","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ab8bbc9.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Treemap } from \"recharts\";\n\nexport interface TreemapProps {\n  width?: number;\n  height?: number;\n  data?: any;\n  dataKey?: string;\n  type?: string;\n  ratio?: number;\n  stroke?: string;\n  fill?: string;\n  animationBegin?: number;\n  animationDuration?: number;\n  animationEasing?: string;\n}\n\nexport interface TreemapState {}\n\nexport class Treemaps extends PureComponent<TreemapProps,TreemapState> {\n  render() {\n    return (\n      <div className=\"App\">\n        <Treemap\n          width={this.props.width}\n          height={this.props.height}\n          data={this.props.data}\n          dataKey= {this.props.dataKey}\n          type={this.props.type}\n          ratio={this.props.ratio}\n          stroke={this.props.stroke}\n          fill={this.props.fill}\n          animationBegin={this.props.animationBegin}\n          animationDuration={this.props.animationDuration}\n          animationEasing={this.props.animationEasing}\n        />\n      </div>\n    );\n  }\n}\n\n","export const SampleData = [\n\t{\n\t\tname: 'axis',\n\t\tchildren: [\n\t\t\t{ name: 'Axes', size: 1302 },\n\t\t\t{ name: 'Axis', size: 24593 },\n\t\t\t{ name: 'AxisGridLine', size: 652 },\n\t\t\t{ name: 'AxisLabel', size: 636 },\n\t\t\t{ name: 'CartesianAxes', size: 6703 },\n\t\t],\n\t},\n\t{\n\t\tname: 'controls',\n\t\tchildren: [\n\t\t\t{ name: 'AnchorControl', size: 2138 },\n\t\t\t{ name: 'ClickControl', size: 3824 },\n\t\t\t{ name: 'Control', size: 1353 },\n\t\t\t{ name: 'ControlList', size: 4665 },\n\t\t\t{ name: 'DragControl', size: 2649 },\n\t\t\t{ name: 'ExpandControl', size: 2832 },\n\t\t\t{ name: 'HoverControl', size: 4896 },\n\t\t\t{ name: 'IControl', size: 763 },\n\t\t\t{ name: 'PanZoomControl', size: 5222 },\n\t\t\t{ name: 'SelectionControl', size: 7862 },\n\t\t\t{ name: 'TooltipControl', size: 8435 },\n\t\t],\n\t},\n\t{\n\t\tname: 'data',\n\t\tchildren: [\n\t\t\t{ name: 'Data', size: 20544 },\n\t\t\t{ name: 'DataList', size: 19788 },\n\t\t\t{ name: 'DataSprite', size: 10349 },\n\t\t\t{ name: 'EdgeSprite', size: 3301 },\n\t\t\t{ name: 'NodeSprite', size: 19382 },\n\t\t\t{\n\t\t\t\tname: 'render',\n\t\t\t\tchildren: [\n\t\t\t\t\t{ name: 'ArrowType', size: 698 },\n\t\t\t\t\t{ name: 'EdgeRenderer', size: 5569 },\n\t\t\t\t\t{ name: 'IRenderer', size: 353 },\n\t\t\t\t\t{ name: 'ShapeRenderer', size: 2247 },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ name: 'ScaleBinding', size: 11275 },\n\t\t\t{ name: 'Tree', size: 7147 },\n\t\t\t{ name: 'TreeBuilder', size: 9930 },\n\t\t],\n\t},\n\t{\n\t\tname: 'events',\n\t\tchildren: [\n\t\t\t{ name: 'DataEvent', size: 7313 },\n\t\t\t{ name: 'SelectionEvent', size: 6880 },\n\t\t\t{ name: 'TooltipEvent', size: 3701 },\n\t\t\t{ name: 'VisualizationEvent', size: 2117 },\n\t\t],\n\t},\n\t{\n\t\tname: 'legend',\n\t\tchildren: [\n\t\t\t{ name: 'Legend', size: 20859 },\n\t\t\t{ name: 'LegendItem', size: 4614 },\n\t\t\t{ name: 'LegendRange', size: 10530 },\n\t\t],\n\t},\n\t{\n\t\tname: 'operator',\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tname: 'distortion',\n\t\t\t\tchildren: [\n\t\t\t\t\t{ name: 'BifocalDistortion', size: 4461 },\n\t\t\t\t\t{ name: 'Distortion', size: 6314 },\n\t\t\t\t\t{ name: 'FisheyeDistortion', size: 3444 },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'encoder',\n\t\t\t\tchildren: [\n\t\t\t\t\t{ name: 'ColorEncoder', size: 3179 },\n\t\t\t\t\t{ name: 'Encoder', size: 4060 },\n\t\t\t\t\t{ name: 'PropertyEncoder', size: 4138 },\n\t\t\t\t\t{ name: 'ShapeEncoder', size: 1690 },\n\t\t\t\t\t{ name: 'SizeEncoder', size: 1830 },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'filter',\n\t\t\t\tchildren: [\n\t\t\t\t\t{ name: 'FisheyeTreeFilter', size: 5219 },\n\t\t\t\t\t{ name: 'GraphDistanceFilter', size: 3165 },\n\t\t\t\t\t{ name: 'VisibilityFilter', size: 3509 },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ name: 'IOperator', size: 1286 },\n\t\t\t{\n\t\t\t\tname: 'label',\n\t\t\t\tchildren: [\n\t\t\t\t\t{ name: 'Labeler', size: 9956 },\n\t\t\t\t\t{ name: 'RadialLabeler', size: 3899 },\n\t\t\t\t\t{ name: 'StackedAreaLabeler', size: 3202 },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'layout',\n\t\t\t\tchildren: [\n\t\t\t\t\t{ name: 'AxisLayout', size: 6725 },\n\t\t\t\t\t{ name: 'BundledEdgeRouter', size: 3727 },\n\t\t\t\t\t{ name: 'CircleLayout', size: 9317 },\n\t\t\t\t\t{ name: 'CirclePackingLayout', size: 12003 },\n\t\t\t\t\t{ name: 'DendrogramLayout', size: 4853 },\n\t\t\t\t\t{ name: 'ForceDirectedLayout', size: 8411 },\n\t\t\t\t\t{ name: 'IcicleTreeLayout', size: 4864 },\n\t\t\t\t\t{ name: 'IndentedTreeLayout', size: 3174 },\n\t\t\t\t\t{ name: 'Layout', size: 7881 },\n\t\t\t\t\t{ name: 'NodeLinkTreeLayout', size: 12870 },\n\t\t\t\t\t{ name: 'PieLayout', size: 2728 },\n\t\t\t\t\t{ name: 'RadialTreeLayout', size: 12348 },\n\t\t\t\t\t{ name: 'RandomLayout', size: 870 },\n\t\t\t\t\t{ name: 'StackedAreaLayout', size: 9121 },\n\t\t\t\t\t{ name: 'TreeMapLayout', size: 9191 },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ name: 'Operator', size: 2490 },\n\t\t\t{ name: 'OperatorList', size: 5248 },\n\t\t\t{ name: 'OperatorSequence', size: 4190 },\n\t\t\t{ name: 'OperatorSwitch', size: 2581 },\n\t\t\t{ name: 'SortOperator', size: 2023 },\n\t\t],\n\t},\n];\n","import React from \"react\";\nimport { Treemaps, TreemapProps } from \"./Treemaps\";\nimport { SampleData } from \"./SampleData\";\nimport { Data, Children } from \"./DataSet\";\nvar Component = React.Component;\ntype ColumnType = \"TEXT\" | \"LABEL\" | \"NUMBER\";\n\ninterface Column {\n  name: string;\n  type: ColumnType;\n}\n\ninterface DataSet {\n  columns: Column[];\n  data: string[][];\n}\n\n// Default Values\nconst WIDTH = 400;\nconst HEIGHT = 200;\nconst DATAKEY = \"size\";\nconst TYPE = \"flat\";\nconst RATIO = 4 / 3;\nconst STROKE = \"#fff\";\nconst FILL = \"#8884d8\";\nconst ANIMATIONBEGIN = 0;\nconst ANIMATIONDURATION = 100;\nconst ANIMATIONEASING = \"linear\";\n// constants\nconst INVALID_DATASET_MESSAGE =\n  \"Provided dataset is not valid. Please check Treemap Component instructions for more details. Showing sample data.\";\n\nfunction validateDataset(dataSet: DataSet): boolean {\n  if (dataSet) {\n    const cols = dataSet.columns;\n    if (cols.length === 3) {\n      return (\n        (cols[0].type === \"TEXT\" || cols[0].type === \"LABEL\") &&\n        (cols[1].type === \"TEXT\" || cols[1].type === \"LABEL\") &&\n        cols[2].type === \"NUMBER\"\n      );\n    }\n  }\n\n  return false;\n}\n\ninterface State {\n  width?: number;\n  height?: number;\n  data?: Data[];\n  dataKey?: string;\n  type?: string;\n  ratio?: number;\n  stroke?: string;\n  fill?: string;\n  animationBegin?: number;\n  animationDuration?: number;\n  animationEasing?: string;\n  invalidDataSet?: boolean;\n}\n\nexport class Chart extends Component<any, State> {\n  receiveEvent: (event: any) => void;\n\n  constructor(props: TreemapProps) {\n    super(props);\n\n    this.state = {\n      width: WIDTH,\n      height: HEIGHT,\n      data: SampleData,\n      dataKey: DATAKEY,\n      type: TYPE,\n      ratio: RATIO,\n      stroke: STROKE,\n      fill: FILL,\n      animationBegin: ANIMATIONBEGIN,\n      animationDuration: ANIMATIONDURATION,\n      animationEasing: ANIMATIONEASING,\n      invalidDataSet: false,\n    };\n\n    this.receiveEvent = (event: any) => {\n      const params = event.data.properties as Map<string, object>;\n      const width = +(params.get(\"width\") as any);\n      const height = +(params.get(\"height\") as any);\n      const dataSet = params.get(\"dataSet\") as DataSet;\n      let isValid = validateDataset(dataSet);\n      const datakey = (params.get(\"datakey\") as any) as string;\n      const type = (params.get(\"type\") as any) as string;\n      const ratio = +(params.get(\"ratio\") as any);\n      const stroke = (params.get(\"stroke\") as any) as string;\n      const fill = (params.get(\"fill\") as any) as string;\n      const animationbegin = +(params.get(\"animationbegin\") as any);\n      const animationduration = +(params.get(\"animationduration\") as any);\n      const animationeasing = (params.get(\"animationeasing\") as any) as string;\n      var newdata: Data[] = [];\n      let data: Data[] = [];\n\n      if (isValid) {\n        dataSet.data.forEach((d) => {\n          if (d[1] !== \"null\") {\n            data.push({\n              name: (d[1] as any) as string,\n              children: [{ name: (d[0] as any) as string, size: +d[2] }],\n            });\n          }\n        });\n\n        let group: { [key: string]: Array<Children> } = data.reduce((r, a) => {\n          r[a.name] = [...(r[a.name] || []), a.children[0]];\n          return r;\n        }, {});\n\n        for (var key in group) {\n          if (group.hasOwnProperty(key)) {\n            newdata.push({\n              name: key,\n              children: group[key],\n            });\n          }\n        }\n      }\n      data=newdata;\n      this.setState({\n        width: width || WIDTH,\n        height: height || HEIGHT,\n        data: data,\n        dataKey: datakey || DATAKEY,\n        type: type || TYPE,\n        ratio: ratio || RATIO,\n        stroke: stroke ? \"#\" + stroke : STROKE,\n        fill: fill ? \"#\" + fill : FILL,\n        animationBegin: animationbegin || ANIMATIONBEGIN,\n        animationDuration: animationduration || ANIMATIONDURATION,\n        animationEasing: animationeasing || ANIMATIONEASING,\n        invalidDataSet: !isValid,\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"message\", this.receiveEvent, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"message\", this.receiveEvent, false);\n  }\n  render() {\n    return (\n      <div style={{ width: \"auto\", height: \"auto\" }}>\n        {this.state.invalidDataSet ? (\n          <div>\n            <em>\n              <strong>{INVALID_DATASET_MESSAGE}</strong>\n            </em>\n          </div>\n        ) : null}\n        <Treemaps {...this.state} />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React from 'react';\nimport './App.css';\nimport  {Chart} from './Chart';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Chart />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}